apiVersion: apps/v1
kind: Deployment
metadata:
  name: sdf-docs-deployment
  labels:
    app: nginx-sdf-docs
    facility: scs
    space: sdf
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-sdf-docs
      facility: scs
      space: sdf
  template:
    metadata:
      labels:
        app: nginx-sdf-docs
        #app: sdf-docs
        facility: scs
        space: sdf
    spec:
      containers:
      - name: sdf-docs 
        image: slaclab/sdf-docs
        env:
        - name: http_proxy
          value: http://squid.slac.stanford.edu:3128
        - name: https_proxy
          value: http://squid.slac.stanford.edu:3128
        - name: no_proxy
          value: .slac.stanford.edu
        - name: SLAC_SDF_DOCS_UPDATE_INTERVAL
          value: "300"
        volumeMounts: 
        - mountPath: /sdf-docs
          name: sdf-docs
      volumes:
      - name: sdf-docs
        emptyDir: {}
      - name: ood-portal-config
        configMap:
          name: ood-config
          items:
          - key: ood_portal.yml
            path: ood_portal.yml
      #- name: ood-clusterd-config
      #  configMap:
      #    name: ood-config
      #    items:
      #    - key: sdf_cluster.yml
      #      path: sdf.yml
      #- name: ood-htpasswd
      #  secret:
      #    secretName: auth
      #    defaultMode: 256
      #    items:
      #    - key: htpasswd
      #      path: .htpasswd
      - name: ood-certs
        secret:
          secretName: certs
          defaultMode: 420
      # customisation
      - name: pun-html
        configMap:
          name: pun-html




# --- from kubernetes/git-sync demo
# --- https://github.com/kubernetes/git-sync/blob/master/demo/deployment.yaml#L18
#  template:
#      metadata:
#        labels:
#          app: nginx-sdf-docs
#          facility: scs
#          space: sdf
#      spec:
#        volumes:
#          - name: content
#            emptyDir: {}
#        containers:
#          # This container pulls a git repo into the "content" volume.  If this
#          # were a "real" app it would probably have livenessProbe and resources,
#          # and maybe a secret to get credentials for your git server.
#          - name: git-sync
#            image: registry.k8s.io/git-sync/git-sync:v4.2.3
#            args:
#              - --repo=https://github.com/kubernetes/git-sync
#              - --root=/git
#              - --period=60s
#              - --link=head
#              - --max-failures=1000000000
#              - -v=2
#            volumeMounts:
#              - name: content
#                mountPath: /git
#          # This container is a trivial HTTP server for the content.
#          # If this were a "real" app it would not be so trivial.  For example,
#          # nginx or apache are much more robust web servers!  It's missing a
#          # livenessProbe, resources, and many other things you would want for
#          # running in production.  Also, you would probably have a git repo
#          # dedicated to holding your content.
#          - name: http
#            image: python:alpine
#            args:
#              - python3
#              - -m
#              - http.server
#              - -d=/git/head/demo/html
#            volumeMounts:
#              - name: content
#                mountPath: /git
#                readOnly: true
